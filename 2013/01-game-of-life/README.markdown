# Game of Life

Разнообразни имплементации на Game of Life, взети почти едно-към-едно от [Clojure Programming][clojure-programming], която горещо препоръчваме.


Показва три различни имплементации на Game of Life:

* Реализация с вектор от вектори, която ползва индекси
* Реализация с вектор от вектори, която не ползва индекси
* Реализация с множество от живи клекти (вектор с два елемента)

От трите, последната е най-смислена, но първите две илюстрират интересни неща в езика. Във всяка от тях има любопитни неща. Например, тази с индексите има три варианта (кръстени `step`, `step2` и `step3`) с различна сложност, а пък тази с множеството има вариант с друга топология.

## Подкарване

Основното действие става в `src/life/logic.clj`, което може да промените както искате. Има три примерни имплементации в `indexed.clj`, `indexless.clj` и `sets.clj`, всички в `src/life/`. За да ги пробвате, може да копирате съдържанието им в `logic.clj`, запазвайки първия ред, деклариращ именовано пространство. Алтернативно, в `src/life/state.clj` може да замените `life.logic` с някой от другите модули и да прекомпилирате. Тези еквилибристики могат да бъдат избегнати с използване на `defprotocol`, но понеже още не е покрит като този пример е показан, се налага да го правите така.

За да пуснете нещата, просто направете

    $ lein run

[clojure-programming]: http://clojurebook.com/
